name: Publish to Github Packages
on:
  pull_request:
    branches: [ main ]
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'adopt'

      - name: Build opencv jar and binary
        shell: bash
        run: |
          # Install minimal prerequisites
          sudo apt update && sudo apt install -y cmake g++ wget unzip ant

          # Download and unpack sources
          wget -O opencv.zip https://github.com/opencv/opencv/archive/3.4.16.zip
          unzip opencv.zip

          # Create build directory
          mkdir -p buildOpencv && cd buildOpencv

          # Configure
          cmake  -D BUILD_SHARED_LIBS=OFF ../opencv-3.4.16

          # Build
          cmake --build .

          #package
          make -j

          echo "Moving jar and natve file to opencv-artifact foder"
          mkdir -p ../opencv-artifact
          cp ./bin/opencv-3416.jar ../opencv-artifact/opencv_3416.jar
          cp ./lib/libopencv_java3416.so ../opencv-artifact/libopencv_java3416.so

          echo "Showing content of /opencv-artifact"
          ls ../opencv-artifact/

      - name: Archive operncv artifacts
        uses: actions/upload-artifacts@v3
        with:
          name: open-3416
          path: |
            ./opencv-artifact/

      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew

      - name: Step Gradle
        uses: gradle/gradle-build-action@v2

      - name: run build and skip test
        run: ./gradlew build -x test
        env:
          ENVIRONMENT: ${{ secrets.ENV }}

      - name: package code in jar
        run: ./gradlew jar
        env:
          ENVIRONMENT: ${{ secrets.ENV }}

      - name: Publish to github packages
        run: ./gradlew publish
        env:
          ENVIRONMENT: ${{ secrets.ENV }}
          GPR_USER: ${{ secrets.GPR_USER }}
          GPR_API_KEY: ${{ secrets.GPR_API_KEY }}